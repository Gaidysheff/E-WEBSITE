/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CartIndexRouteImport } from './routes/cart/index'
import { Route as ProductsSlugRouteImport } from './routes/products/$slug'
import { Route as CategoriesCategoryIdRouteImport } from './routes/categories/$categoryId'
import { Route as CartCartcodeRouteImport } from './routes/cart/$cartcode'

const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CartIndexRoute = CartIndexRouteImport.update({
  id: '/cart/',
  path: '/cart/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsSlugRoute = ProductsSlugRouteImport.update({
  id: '/products/$slug',
  path: '/products/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const CategoriesCategoryIdRoute = CategoriesCategoryIdRouteImport.update({
  id: '/categories/$categoryId',
  path: '/categories/$categoryId',
  getParentRoute: () => rootRouteImport,
} as any)
const CartCartcodeRoute = CartCartcodeRouteImport.update({
  id: '/cart/$cartcode',
  path: '/cart/$cartcode',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/cart/$cartcode': typeof CartCartcodeRoute
  '/categories/$categoryId': typeof CategoriesCategoryIdRoute
  '/products/$slug': typeof ProductsSlugRoute
  '/cart': typeof CartIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/cart/$cartcode': typeof CartCartcodeRoute
  '/categories/$categoryId': typeof CategoriesCategoryIdRoute
  '/products/$slug': typeof ProductsSlugRoute
  '/cart': typeof CartIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/cart/$cartcode': typeof CartCartcodeRoute
  '/categories/$categoryId': typeof CategoriesCategoryIdRoute
  '/products/$slug': typeof ProductsSlugRoute
  '/cart/': typeof CartIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/profile'
    | '/cart/$cartcode'
    | '/categories/$categoryId'
    | '/products/$slug'
    | '/cart'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/profile'
    | '/cart/$cartcode'
    | '/categories/$categoryId'
    | '/products/$slug'
    | '/cart'
  id:
    | '__root__'
    | '/'
    | '/profile'
    | '/cart/$cartcode'
    | '/categories/$categoryId'
    | '/products/$slug'
    | '/cart/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProfileRoute: typeof ProfileRoute
  CartCartcodeRoute: typeof CartCartcodeRoute
  CategoriesCategoryIdRoute: typeof CategoriesCategoryIdRoute
  ProductsSlugRoute: typeof ProductsSlugRoute
  CartIndexRoute: typeof CartIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cart/': {
      id: '/cart/'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/$slug': {
      id: '/products/$slug'
      path: '/products/$slug'
      fullPath: '/products/$slug'
      preLoaderRoute: typeof ProductsSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/categories/$categoryId': {
      id: '/categories/$categoryId'
      path: '/categories/$categoryId'
      fullPath: '/categories/$categoryId'
      preLoaderRoute: typeof CategoriesCategoryIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cart/$cartcode': {
      id: '/cart/$cartcode'
      path: '/cart/$cartcode'
      fullPath: '/cart/$cartcode'
      preLoaderRoute: typeof CartCartcodeRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProfileRoute: ProfileRoute,
  CartCartcodeRoute: CartCartcodeRoute,
  CategoriesCategoryIdRoute: CategoriesCategoryIdRoute,
  ProductsSlugRoute: ProductsSlugRoute,
  CartIndexRoute: CartIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
